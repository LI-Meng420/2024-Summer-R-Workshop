1
a <- 1
a
"你好，R!"
a <- "你好，R!"
a
pacman::p_load(tidyverse, statart)
s_type(a)
s_type(123)
s_type(123L) # integer means 整数 in R
s_type(b)
s_type(TRUE)
s_type(FALSE) # FALSE means 假 in R
s_type(T)
s_type(NA) # NA means not available in R
s_type("你好，R!") # character means 字符串 in R
s_type("123") # character means 字符串 in R
s_type(s_type)
df <- data.frame(
a = 1:10,
b = letters[1:10]
)
df
df <- data.frame(
a = 1:25,
b = letters[1:25]
)
df
tb <- as_tibble(df)
tb
tab(tb)
diamonds
diamonds %>%
as.data.frame()
diamonds
diamonds %>%
print_headtail()
diamonds %>%
print_interval()
# Load the necessary packages
library(haven)
library(tidyverse)
library(statart)
library(arrow)
# Load the sample data
# Change it to your own directory
# There are many ways to specify the path
path <- getwd() %>%
file.path("Sample Data/sample_data.dta")
path
tb <- read_data(path)
# Load the sample data
# Change it to your own directory
# There are many ways to specify the path
path <- getwd() %>%
file.path("Week 1/Sample Data/sample_data.dta")
tb <- read_data(path)
print_interval(tb)
codebook(tb)
summ(tb)
tb <- tb |>
mutate(
a1 = a + 1,
b2 = b * 2
)
print_interval(tb)
# .ftr is a feather file (轻如鸿毛)
# Export the data to a .ftr file
write_data(tb, "sample_data_cleaned.ftr")
# Load the sample data
# Change it to your own directory
# There are many ways to specify the path
path <- getwd() %>%
file.path("Sample Data/sample_data.dta")
tb <- read_data(path)
# Load the sample data
# Change it to your own directory
# There are many ways to specify the path
path <- getwd() %>%
file.path("Week 1/Sample Data/sample_data.dta")
tb <- read_data(path)
print_interval(tb)
gg <- tb |>
ggplot() +
aes(d, a) +
geom_point() +
geom_smooth(
method = "lm",
color = "yellow",
linetype = "dashed"
)
# Change it to your own directory
out_path <- getwd() %>%
file.path("Week 1/sample data/sample_data_plot.png")
ggsave(out_path, gg, width = 6, height = 4, dpi = 300, units = "in")
gg
getwd()
# This is the data folder on my computer
# You should change it to your own folder
# You can type the directory manually or use file.choose()
data_folder <- getwd() |>
file.path("Week 1/Sample Data")
data_folder
# Usually I don't use setwd(), but it is useful here.
setwd(data_folder)
tb <- read_data("sample_data.ftr")
tb
tb
print(tb)
1234
print(tb, n = 5)
tb %>%
bind_cols(tb)
tb %>%
bind_cols(tb) %>%
bind_cols(tb)
tb %>%
bind_cols(tb) %>%
bind_cols(tb) %>%
print(width = Inf)
diamonds
diamonds %>% print_headtail()
diamonds %>% print_headtail(20)
diamonds %>% print_interval()
diamonds %>% print_interval(20)
view(diamonds)
glimpse(diamonds)
browse(diamonds)
browse(diamonds, x:z)
view(diamonds, x:z)
library(flextable)
as_flextable(diamonds)
as_flextable(diamonds, max_row = 20)
as_flextable(diamonds, max_row = 20) %>%
write_as_docx("diamonds.docx")
as_flextable(diamonds, max_row = 20) %>%
save_as_docx("diamonds.docx")
as_flextable(diamonds, max_row = 20) %>%
save_as_docx(path = "diamonds.docx")
lifeexp
tab(lifeexp, region)
lifeexp
region
tab(lifeexp, region)
diamonds %>%
print(width = 100)
diamonds %>%
print(width = 200)
diamonds %>%
print(width = 500)
# alternatively,
pacman::p_load(tidyverse, statart)
library(tidyverse)
library(statart
)
who
data(who)
who
nrow(who)
ncol(who)
dim(who)
# Question 2b
codebook(who)
# Question 2b
view(codebook(who))
print(codebook(who), n = 60)
print_interval(codebook(who))
tab(codebook(who), type)
glimpse(who)
# Question 2c
getwd()
# Question 2c
path <- "D:/R/Teaching/2024 Summer R Workshop/Week 1/Week 1 Assignment/who.csv"
write_csv(who, path)
write_data(who, path)
###### Import NLSW 1988 Data ######
# QUESTION 3. Import the dataset "nlsw88.dta" as "nlsw88"
nlsw88 <- haven::read_dta("D:/R/Teaching/2024 Summer R Workshop/Week 1/Week 1 Assignment/nlsw88.dta")
###### Import NLSW 1988 Data ######
# QUESTION 3. Import the dataset "nlsw88.dta" as "nlsw88"
path <- "D:/R/Teaching/2024 Summer R Workshop/Week 1/Week 1 Assignment/nlsw88.dta"
View(nlsw88)
tail(nslw88)
tail(nlsw88)
tail(nlsw88, 5)
35 + 44 + 42 + 38 + 43
(35 + 44 + 42 + 38 + 43) / 5
c(35, 44, 42, 38, 43) %>% mean()
print_headtail(nlsw88)
tail(nlsw88, 5)
tail(nlsw88, 5) %>%
summarise(mean(age))
# QUESTION 3b. What is the meaning of variable "ttl_exp"?
codebook(nlsw88)
codebook(nlsw88) %>%
slice(18) %>%
pull(label)
codebook(nlsw88) %>%
slice(16) %>%
pull(label)
variables(nlsw88)
nslw88 <- arrange(nslw88, wage)
nlsw88 <- arrange(nlsw88, wage)
print_interval(nlsw88)
pacman::p_load(tidyverse, statart)
# Load the data
# Downloaded from https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/KER9GK
# Wang, Yuhua, 2021, "Replication Data for: The Rise and Fall of Imperial China: The Social Origins of State Development. Princeton University Press.", https://doi.org/10.7910/DVN/KER9GK, Harvard Dataverse, V1, UNF:6:L5nJpS44U2P6GvJeR7SThg== [fileUNF]
file <- "C:/Users/socim/Downloads/all song officials vertex attributes.csv"
tb <- read_data(file)
print_interval(tb)
glimpse(tb)
glimpse(tb)
arrange(tb, name_pinyin)
arrange(tb, name_fanti)
relocate(tb, hometown_county_name)
relocate(tb, hometown_county_name, .after = name_fanti)
# Use %>% to chain the functions
tb %>%
arrange(name_fanti) %>%
print_interval(20)
# Select the columns
names(tb)
tb %>%
select(
starts_with("hometown")
)
tb %>%
select(hometown_county_pinyin:hometown_province_name)
tb %>%
ds(hometown_county_pinyin:hometown_province_name)
tb %>%
ds(starts_with("hometown"))
tb %>%
ds(hometown_code:hometown_province_name)
tb %>%
ds(c(hometown_code, hometown_county_pinyin:hometown_province_name))
tb %>%
ds(hometown_code:hometown_province_name)
tb %>%
select(hometown_code:hometown_province_name) %>%
ds(-c(office_startyear:fiscal_CBDB))
tb %>%
ds(s_match("hometown_code hometown_county_pinyin-hometown_province_name"))
tb %>%
ds(s_match("hometown_county_pinyin-hometown_province_name"))
tb %>%
ds(s_match("hometown*"))
# Select the columns
names(tb)
# select cohort10-cohort16
tb %>%
ds(cohort10:cohort16)
tb %>%
ds(starts_with("cohort1"))
tb %>%
select(starts_with("cohort1")) %>%
ds(-cohort1)
tb %>%
select(matches("cohort1\\d"))
tb %>%
ds(matches("cohort1\\d"))
tb %>%
ds(s_match("cohort1*"))
tb %>%
ds(s_match("cohort1[0-6]"))
tb %>%
ds(s_match("cohort1?"))
tb %>%
ds(matches("cohort1."))
tb %>%
ds(matches("cohort1[0-6]"))
tb %>%
ds(where(is.character))
tb %>%
select(where(is.character))
tb %>%
select(where(is.character)) %>%
glimpse()
# select the last column(s)
tb %>%
select(last_col())
tb %>%
select(last_col(2))
# Select the columns
names(tb)
tb %>%
select(last_col(2))
tb %>%
select(last_col(1))
tb %>%
select(last_col(2):last_col())
# relocate in alphabetical order
tb %>%
names_as_column()
# relocate in alphabetical order
tb %>%
names_as_column() %>%
arrange(1)
# relocate in alphabetical order
tb %>%
names_as_column() %>%
arrange(name)
# relocate in alphabetical order
tb %>%
names_as_column() %>%
arrange(name) %>%
pull(1)
# relocate in alphabetical order
names_sorted <- tb %>%
names_as_column() %>%
arrange(name) %>%
pull(1)
tb %>%
relocate(names_sorted)
tb %>%
relocate(all_of(names_sorted))
tb %>%
select(all_of(names_sorted))
