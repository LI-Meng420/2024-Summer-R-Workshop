tb %>%
tab2(province, country)
tb %>%
tab2(province, country)
# ===========================================================
# fre() converts the output to a flextable
tb %>%
fre(clean_data_result)
# ===========================================================
# fre() converts the output to a flextable
tb %>%
fre(province)
tb %>%
fre1(clean_data_result, country, province)
tb %>%
fre2(province, country)
# sort the desired topics to learn
tb %>%
select(id, s_match("learn_r*")) %>%
select(-last_col()) %>%
pivot_longer(
cols = -c(1:2),
names_to = "topic_eng",
values_to = "topic_chn"
) %>%
mutate(
mention_all = !is.na(learn_r_all),
mention = !is.na(topic_chn),
topic_eng = str_remove(topic_eng, "learn_r_"),
topic_chn = str_remove(topic_chn, "^\\w\\.")
) %>%
group_by(topic_eng) %>%
fill(topic_chn, .direction = "updown") %>%
ungroup() %>%
mutate(
mention_n = mention_all + mention
) %>%
summ(mention_n, .by = c(topic_eng, topic_chn)) %>%
arrange(-mean)
###### Explore storms data ######
# QUESTION 2. Print the built-in dataset of tidyverse "starwars".
# QUESTION 2a. Sort the dataset by date (i.e., year + month + day) and then print_interval().
# QUESTION 2b. Only keep the storm "Dennis" and only keep numeric variables.
starwars
###### Explore storms data ######
# QUESTION 2. Print the built-in dataset of tidyverse "starwars".
# QUESTION 2a. Sort the dataset by date (i.e., year + month + day) and then print_interval().
# QUESTION 2b. Only keep the storm "Dennis" and only keep numeric variables.
starwars
###### Explore storms data ######
# QUESTION 2. Print the built-in dataset of tidyverse "starwars".
# QUESTION 2a. Sort the dataset by date (i.e., year + month + day) and then print_interval().
# QUESTION 2b. Only keep the storm "Dennis" and only keep numeric variables.
starwars %>%
filter(eye_color == "blue")
###### Explore storms data ######
# QUESTION 2. Print the built-in dataset of tidyverse "starwars".
# QUESTION 2a. Sort the dataset by date (i.e., year + month + day) and then print_interval().
# QUESTION 2b. Only keep the storm "Dennis" and only keep numeric variables.
starwars %>%
filter(eye_color == skin_color)
###### Explore storms data ######
# QUESTION 2. Print the built-in dataset of tidyverse "starwars".
# QUESTION 2a. Sort the dataset by date (i.e., year + month + day) and then print_interval().
# QUESTION 2b. Only keep the storm "Dennis" and only keep numeric variables.
starwars %>%
filter(eye_color == skin_color & hair_color == eye_color)
###### Explore storms data ######
# QUESTION 2. Print the built-in dataset of tidyverse "starwars".
# QUESTION 2a. Sort the dataset by date (i.e., year + month + day) and then print_interval().
# QUESTION 2b. Only keep the storm "Dennis" and only keep numeric variables.
starwars %>%
filter(eye_color == skin_color & hair_color == eye_color) %>%
slice(1)
tb %>%
filter(hair_color == "black") %>%
summ(height)
starwars %>%
filter(hair_color == "black") %>%
summ(height)
tab(sex, gender)
tab(starwars, sex, gender)
tab2(starwars, sex, gender)
starwars
starwars %>%
species
starwars %>%
tab(species)
starwars %>%
tab(homeworld)
starwars %>%
tab(homeworld) %>%
tab(n)
starwars %>%
tab(homeworld) %>%
tab(homeworld, n)
starwars %>%
tab(homeworld) %>%
arrange(-n)
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5)
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5) %>%
set_seed(20240617) %>%
fre1()
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5) %>%
fre1() %>%
set_seed(20240617)
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5)
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5) %>%
tab1() %>%
set_seed(20240617)
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5) %>%
summ() %>%
set_seed(20240617)
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5) %>%
set_seed(20240617) %>%
summ()
starwars %>%
filter(sex == "male") %>%
slice_sample(n = 5) %>%
set_seed(20240617) %>%
view()
# Load the required packages and the data
pacman::p_load(tidyverse, statart)
path <- "D:/R/Teaching/2024 Summer R Workshop/Week 7/省份名称.xlsx"
tb <- read_data(path)
tb %>% names()
tb
varnames <- tb %>% names()
varnames %>%
str_extract("/.+$")
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ")
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
str_to_lower()
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
str_to_lower() %>%
str_replace(" ", "_")
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
str_to_lower() %>%
str_replace_all(" ", "_")
tidy_varnames <- varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
str_to_lower() %>%
str_replace_all(" ", "_")
tb %>%
rename_with(~ tidy_varnames)
tb %>%
rename_with(~ tidy_varnames) %>%
pull(short_name)
tb <- tb %>%
rename_with(~ tidy_varnames)
tb %>%
mutate(
short_name_list = str_split(short_name, "/")
)
?str_split
tb %>%
mutate(
short_name_list = str_split(short_name, "[/或]")
)
tb %>%
mutate(
short_name_list = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name_list) %>%
select(chinese_name, short_name_list)
tb %>%
mutate(
short_name_list = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name_list) %>%
select(chinese_name, short_name_list) %>%
filter(chinese_name != short_name_list)
tb %>%
mutate(
short_name_list = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name_list) %>%
relocate(chinese_name, short_name_list) %>%
filter(chinese_name != short_name_list)
tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
relocate(chinese_name, short_name) %>%
filter(chinese_name != short_name)
tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
relocate(chinese_name, short_name) %>%
filter(chinese_name != short_name) %>%
pull(short_name)
tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
relocate(chinese_name, short_name) %>%
filter(chinese_name != short_name)
tb %>%
tab(str_detect(origin_of_short_name, "缩略"))
tb %>%
tab(str_detect(origin_of_short_name, "古"))
tb %>%
mutate(
origin = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
TRUE ~ "其它"
)
) %>%
tab(origin)
tb %>%
tab2(
str_detect(origin_of_short_name, "缩略"),
str_detect(origin_of_short_name, "古")
)
tb %>%
fre2(
str_detect(origin_of_short_name, "缩略"),
str_detect(origin_of_short_name, "古")
)
tb %>%
fre2(
缩略 = str_detect(origin_of_short_name, "缩略"),
古称 = str_detect(origin_of_short_name, "古")
)
tb %>%
mutate(
origin = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
TRUE ~ "其它"
)
) %>%
tab(origin)
tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
mutate(
abbr_name = str_detect(chinese_name, short_name)
) %>%
relocate(chinese_name, short_name) %>%
filter(chinese_name != short_name)
tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
mutate(
abbr_name = str_detect(chinese_name, short_name)
) %>%
relocate(chinese_name, short_name, abbr_name) %>%
filter(chinese_name != short_name)
tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
mutate(
abbr_name = str_detect(chinese_name, short_name)
) %>%
relocate(chinese_name, short_name, abbr_name) %>%
filter(chinese_name != short_name) %>%
print_interval()
tb2 <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
mutate(
abbr_name = str_detect(chinese_name, short_name)
) %>%
relocate(chinese_name, short_name, abbr_name) %>%
filter(chinese_name != short_name)
tb_long <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
mutate(
abbr_name = str_detect(chinese_name, short_name)
) %>%
relocate(chinese_name, short_name, abbr_name) %>%
filter(chinese_name != short_name)
tb_long %>%
mutate(
origin = case_when(
abbr_name ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
TRUE ~ "其它"
)
) %>%
tab(origin)
tb_long %>%
mutate(
origin = case_when(
abbr_name ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
TRUE ~ "其它"
)
) %>%
relocate(origin)
# origin_of_short_name is related to the short name
# E.g., 沪/申
tb %>%
tab(origin_of_short_name)
# origin_of_short_name is related to the short name
# E.g., 古称，沪渎/封地，春申君 is related to 沪/申,
tb
# origin_of_short_name is related to the short name
# E.g., 古称，沪渎/封地，春申君 is related to 沪/申,
tb %>% filter(chinese_name == "上海")
# E.g., 古称，沪渎/封地，春申君 is related to 沪/申,
# because 古称，沪渎 -> 沪, 封地，春申君 -> 申
tb_long <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]"),
origin_of_short_name = str_split(origin_of_short_name, "[/或]")
) %>%
unnest_longer(short_name, origin_of_short_name)
tb_long <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]"),
origin_of_short_name = str_split(origin_of_short_name, "[/或]")
) %>%
unnest_longer(short_name)
# E.g., 古称，沪渎/封地，春申君 is related to 沪/申,
# because 古称，沪渎 -> 沪, 封地，春申君 -> 申
tb_long <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]"),
origin_of_short_name = str_split(origin_of_short_name, "[/或]")
) %>%
unnest_longer(short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
)
tb_long
# E.g., 古称，沪渎/封地，春申君 is related to 沪/申,
# because 古称，沪渎 -> 沪, 封地，春申君 -> 申
split_tb <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]"),
origin_of_short_name = str_split(origin_of_short_name, "[/或]")
)
# E.g., 古称，沪渎/封地，春申君 is related to 沪/申,
# because 古称，沪渎 -> 沪, 封地，春申君 -> 申
split_tb <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]"),
origin_of_short_name = str_split(origin_of_short_name, "[/或]")
)
unnest_tb1 <- split_tb %>%
unnest_longer(short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
)
unnest_tb2 <- split_tb %>%
unnest_longer(origin_of_short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
)
unnest_tb1 %>%
left_join(unnest_tb2, by = "chinese_name")
unnest_tb1 %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id"))
unnest_tb1
unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id"))
unnest_tb2 <- split_tb %>%
unnest_longer(origin_of_short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
) %>%
select(-short_name)
unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id"))
unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id)
unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id) %>%
print(n = Inf)
unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id) %>%
filter(chinese_name != short_name) %>%
mutate(
origin_of_short_name = value_if_na(origin_of_short_name, "缩略")
)
unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id) %>%
filter(chinese_name != short_name) %>%
mutate(
origin_of_short_name = value_if_na(origin_of_short_name, "缩略")
) %>%
print(n = Inf)
short_tb <- unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id) %>%
filter(chinese_name != short_name) %>%
mutate(
origin_of_short_name = value_if_na(origin_of_short_name, "缩略")
)
short_tb %>%
print(n = Inf)
abbr_tb <- unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id) %>%
filter(chinese_name != short_name) %>%
mutate(
origin_of_short_name = value_if_na(origin_of_short_name, "缩略")
)
abbr_tb %>%
print(n = Inf)
abbr_tb %>%
mutate(
source = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
TRUE ~ "山河"
)
) %>%
relocate(source, .after = origin_of_short_name)
abbr_tb %>%
mutate(
source = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
str_detect(origin_of_short_name, "[山河]") ~ "山河",
str_detect(origin_of_short_name, "封地") ~ "封地"
)
) %>%
relocate(source, .after = origin_of_short_name)
abbr_tb %>%
mutate(
source = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
str_detect(origin_of_short_name, "[山河]") ~ "山河",
str_detect(origin_of_short_name, "封地") ~ "封地"
)
) %>%
relocate(source, .after = origin_of_short_name) %>%
print(n = Inf)
abbr_tb %>%
mutate(
source = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
str_detect(origin_of_short_name, "[山河]") ~ "山河",
str_detect(origin_of_short_name, "封地") ~ "封地"
)
) %>%
tab(source)
abbr_tb %>%
mutate(
source = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
str_detect(origin_of_short_name, "[山河]") ~ "山河",
str_detect(origin_of_short_name, "封地") ~ "封地"
)
) %>%
tab(source, .desc = TRUE)
abbr_tb %>%
filter(origin_of_short_name == "缩略") %>%
print(n = Inf)
folder <- "D:/R/Teaching/2024 Summer R Workshop"
styler::style_dir(folder)
