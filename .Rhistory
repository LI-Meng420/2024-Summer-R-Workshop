names_to = "income",
values_to = "count"
)
billboard
billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
who
who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = c("diagnosis", "gender", "age"),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = "count"
)
# Load the required packages and the data
pacman::p_load(tidyverse, statart)
path <- "D:/R/Teaching/2024 Summer R Workshop/Week 7/省份名称.xlsx"
tb <- read_data(path)
varnames <- tb %>% names()
varnames
varnames %>%
str_extract("/.+$")
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ")
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
str_to_lower()
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
str_to_lower() %>%
str_replace_all(" ", "_")
varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
janitor::make_clean_names()
tidy_varnames <- varnames %>%
str_extract("/.+$") %>%
str_remove("/ ") %>%
janitor::make_clean_names()
tidy_varnames
tb
tb <- tb %>%
rename_with(~tidy_varnames)
tb %>%
pull(short_name)
tb
tb %>%
pull(short_name)
# origin_of_short_name is related to the short name
tb %>% filter(chinese_name == "上海")
split_tb <- tb %>%
mutate(
short_name = str_split(short_name, "[/或]"),
origin_of_short_name = str_split(origin_of_short_name, "[/或]")
)
split_tb
tibble(a = 1)
tibble(a = 1) %>% s_type()
list(a = 1) %>% s_type()
list(a = 1) %>% class()
list(a = 1, b = "x") %>% class()
list(a = 1, b = tibble(a = 1)) %>% class()
list(a = 1, b = tibble(a = 1))
split_tb %>%
slice(9)
split_tb %>%
slice(9) %>%
pull(short_name)
split_tb %>%
unnest_longer(short_name)
unnest_tb1 <- split_tb %>%
unnest_longer(short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
)
unnest_tb1
unnest_tb1 %>%
relocate(short_name_id)
split_tb %>%
unnest_longer(origin_of_short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
)
unnest_tb2 <- split_tb %>%
unnest_longer(origin_of_short_name) %>%
mutate(
short_name_id = row_number(),
.by = "chinese_name"
) %>%
select(-short_name)
unnest_tb2 %>%
relocate(short_name_id)
abbr_tb <- unnest_tb1 %>%
select(chinese_name, short_name, short_name_id) %>%
left_join(unnest_tb2, by = c("chinese_name", "short_name_id")) %>%
select(-short_name_id) %>%
filter(chinese_name != short_name) %>%
mutate(
origin_of_short_name = value_if_na(origin_of_short_name, "缩略")
)
abbr_tb
abbr_tb %>%
print(n = Inf)
abbr_tb %>%
filter(origin_of_short_name == "缩略") %>%
print(n = Inf)
tb %>%
filter(origin_of_short_name == "缩略") %>%
print(n = Inf)
abbr_tb %>%
mutate(
source = case_when(
str_detect(origin_of_short_name, "缩略") ~ "缩略",
str_detect(origin_of_short_name, "古") ~ "古称",
str_detect(origin_of_short_name, "[山河]") ~ "山河",
str_detect(origin_of_short_name, "封地") ~ "封地"
)
) %>%
# tab(source, .desc = TRUE)
relocate(source, .after = origin_of_short_name) %>%
print(n = Inf)
raw_data <- read_data(
"D:/Health/饮食运动表 仅教学.xlsx",
range = "B2:AC36"
)
raw_data
num_to_date <- function(x, suffix) {
x %>%
as.numeric() %>%
as.Date(origin = "1899-12-30") %>%
paste0(suffix)
}
raw_names <- raw_data %>% names()
raw_names
1:10 %% 2
1:10 %% 2 == 1
date_names <- map_chr(
1:length(raw_names),
~ if_else(
.x %% 2 == 1,
num_to_date(raw_names[.x], " Food"),
num_to_date(raw_names[.x - 1], " Note")
)
) %>%
suppressWarnings()
date_names
raw_data <- raw_data %>%
rename_with(~ date_names)
raw_data
raw_data %>%
pivot_longer(
cols = everything(),
names_to = "date",
values_to = "travel"
)
raw_data %>%
pivot_longer(
cols = everything(),
names_to = "date",
values_to = "travel"
) %>%
print_interval()
raw_data %>%
pivot_longer(
cols = everything(),
names_to = "date",
values_to = "travel"
) %>%
print_interval(n = 20)
raw_travel_data <- raw_data %>%
pivot_longer(
cols = everything(),
names_to = "date",
values_to = "travel"
) %>%
mutate(
date = as.Date(date, format = "%Y-%m-%d"),
travel = str_extract(travel, "^[来回去到]\\w{2,3}$")
)
raw_travel_data
raw_travel_data %>%
filter(!is.na(travel))
raw_travel_data %>%
filter(!is.na(travel)) %>%
arrange(date)
raw_travel_data %>%
distinct(date)
raw_travel_data %>%
filter(!is.na(travel))
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
)
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
)
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
) %>%
fill(travel, direction = "updown")
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
) %>%
fill(travel, .direction = "updown")
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
) %>%
fill(travel, .direction = "up")
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
) %>%
fill(travel, .direction = "down")
raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
) %>%
fill(travel, .direction = "down") %>%
rename(city = travel) %>%
mutate(
lag_date = lag(date),
lag_city = lag(city)
)
travel_data <- raw_travel_data %>%
distinct(date) %>%
left_join(
raw_travel_data %>%
filter(!is.na(travel)),
by = "date"
) %>%
mutate(
travel = if_else(
row_number() == 1,
"深圳",
str_remove_all(travel, "^[来回去到]")
)
) %>%
fill(travel, .direction = "down") %>%
rename(city = travel) %>%
mutate(
lag_date = lag(date),
lag_city = lag(city)
) %>%
mutate(
travel = lag_date != date & lag_city != city,
date0 = if_else(travel, date, NA_Date_),
city0 = ifelse(travel, lag_city, NA)
) %>%
select(date, city, date0, city0) %>%
pivot_longer(
cols = c(date0, date),
names_to = "type",
values_to = "date"
) %>%
filter(!is.na(date)) %>%
mutate(
city = if_else(
type == "date0",
city0,
city
)
) %>%
select(date, city)
travel_data
travel_data %>%
group_by(date) %>%
summarise(
city = str_c(city, collapse = " -> ")
) %>%
filter(str_detect(city, "->"))
travel_data %>%
group_by(date) %>%
summarise(
city = str_c(city, collapse = " -> ")
)
travel_data %>%
group_by(date) %>%
mutate(
city_day = 1 / n()
) %>%
ungroup() %>%
group_by(city) %>%
summarise(
days = sum(city_day),
last_visit = max(date)
) %>%
arrange(desc(days))
where_am_i <- function(date_str) {
travel_data %>%
filter(date == as.Date(date_str)) %>%
pull(city)
}
where_am_i("2024-02-01")
pacman::p_load(tidyverse, statart, epubr)
tb
raw_book <- epub("C:/Users/socim/Downloads/额尔古纳河右岸.epub")
raw_book
raw_book %>%
print(width = Inf)
raw_book %>%
pull(data)
raw_book %>%
pull(data) %>%
.[[1]]
book <- raw_book %>%
pull(data) %>%
.[[1]] %>%
slice(2) %>%
pull(text)
book
# Word count
word_count <- str_length(book)
word_count
# Number of paragraphs
book %>%
str_count("\\n")
# Number of sentences
book %>%
str_count("[。！？!?]")
book_vector[1:20]
book_vector <- book %>%
str_remove("\\n申明.+第06期") %>%
str_split_1("\\s\\n")
book_vector[1:20]
book_vector %>%
map_dbl(~ str_count(.x, "[。！？!?]"))
book_vector[459:463]
# Analyze a name in the book
keyword_tb <- book %>%
str_locate_all("列娜") %>%
.[[1]] %>%
as_tibble() %>%
mutate(
location = row_mean(start:end) / word_count
)
keyword_tb
book %>%
str_locate_all("列娜")
book %>%
str_locate_all("列娜") %>%
.[[1]] %>%
as_tibble()
keyword_tb %>%
mutate(
y = floor(location * 100),
x = location * 1e4 - y * 100
) %>%
ggplot() +
aes(x, -y) +
geom_point(
shape = 21, fill = "gray80", color = "black",
size = 3
) +
scale_y_continuous(
breaks = seq(-100, 0, 20),
labels = seq(100, 0, -20)
) +
coord_equal(
xlim = c(0, 100), ylim = c(-100, 0)
) +
theme_bw() +
labs(
x = "% within section",
y = "Section"
)
# Write a function about this
keyword_plot <- function(keyword) {
keyword_tb <- book %>%
str_locate_all(keyword) %>%
.[[1]] %>%
as_tibble() %>%
mutate(
location = row_mean(start:end) / word_count
)
keyword_tb %>%
mutate(
y = floor(location * 100),
x = location * 1e4 - y * 100
) %>%
ggplot() +
aes(x, -y) +
geom_point(
shape = 21, fill = "gray80", color = "black",
size = 3
) +
scale_y_continuous(
breaks = seq(-100, 0, 20),
labels = seq(100, 0, -20)
) +
coord_equal(
xlim = c(0, 100), ylim = c(-100, 0)
) +
theme_bw() +
labs(
x = "% within section",
y = "Section"
)
}
keyword_plot("达玛拉")
keyword_plot("拉吉达")
keyword_plot("瓦罗加")
keyword_plot("马伊堪")
keyword_plot("马粪包")
keyword_plot("安草儿")
tibble(
location = seq(.05, .95, .1)
)
tibble(
location = seq(.05, .95, .1)
) %>%
mutate(
y = floor(location * 100),
x = location * 1e4 - y * 100
)
tibble(
location = seq(.05, .98, .9)
) %>%
mutate(
y = floor(location * 100),
x = location * 1e4 - y * 100
)
tibble(
location = seq(.05, .98, .09)
) %>%
mutate(
y = floor(location * 100),
x = location * 1e4 - y * 100
)
tibble(
location = seq(.005, .98, .079)
) %>%
mutate(
y = floor(location * 100),
x = location * 1e4 - y * 100
)
